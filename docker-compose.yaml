version: '3.8'

services:
  mysql-server:
    image: mysql:8
    container_name: mysql-server
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    networks:
      - backend
    volumes:
      - mysql-vol:/var/lib/mysql

  mysql-client:
    image: phpmyadmin:5
    container_name: mysql-client
    restart: always
    ports:
      - 8200:80
    environment:
      - PMA_ARBITRARY=1
    networks:
      - backend

  redis-server:
    image: redis:6.0.5-alpine
    container_name: redis-server
    command: redis-server --requirepass todovale
    restart: always
    ports:
      - 6379:6379
    networks:
      - backend

  redis-client:
    container_name: redis-client
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOST=redis-server
      - REDIS_PORT=6379
      - REDIS_PASSWORD=todovale
    ports:
      - '8081:8081'
    depends_on:
      - redis-server
    networks:
      - backend

  sonarqube:
    image: sonarqube:8-community
    container_name: sonarqube
    ports:
      - '9000:9000'
      - '9092:9092'
    networks:
      - backend

  locust-master:
    build:
      context: .
      dockerfile: locust/Dockerfile
    container_name: locust-master
    ports:
      - '8089:8089'
    command: '--host http://2ee3-38-25-17-118.ngrok-free.app --master'
    networks:
      - backend

  locust-slave:
    build:
      context: .
      dockerfile: locust/Dockerfile
    command: '--host http://2ee3-38-25-17-118.ngrok-free.app --master-host=locust-master --slave'
    networks:
      - backend

networks:
  backend:
    name: net-backend
    driver: bridge

volumes:
  mysql-vol:
